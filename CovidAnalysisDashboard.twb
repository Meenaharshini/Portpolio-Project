<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0511.1508                               -->
<workbook original-version='18.1' source-build='2023.1.2 (20231.23.0511.1508)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='InfectionRate' inline='true' name='federated.1jygqp21qy1mey1birpa4033kv8f' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MEENA\SQLEXPRESS' name='sqlserver.1v4h8bu06qjrnz1fdw38t14c71ts'>
            <connection authentication='sspi' class='sqlserver' dbname='Portfolio' odbc-native-protocol='yes' one-time-sql='' server='MEENA\SQLEXPRESS' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1v4h8bu06qjrnz1fdw38t14c71ts' name='Custom SQL Query' type='text'>SELECT Location,population, MAX(total_cases) AS HighestInfectionRate,&#13;
MAX(total_cases/population) * 100 AS InfectionPopulationPercentage FROM&#13;
Portfolio..CovidDeaths$ &#13;
GROUP BY location,population&#13;
ORDER BY  InfectionPopulationPercentage DESC&#13;
OFFSET 0 ROWS</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1v4h8bu06qjrnz1fdw38t14c71ts' name='Custom SQL Query' type='text'>SELECT Location,population, MAX(total_cases) AS HighestInfectionRate,&#13;
MAX(total_cases/population) * 100 AS InfectionPopulationPercentage FROM&#13;
Portfolio..CovidDeaths$ &#13;
GROUP BY location,population&#13;
ORDER BY  InfectionPopulationPercentage DESC&#13;
OFFSET 0 ROWS</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_F72503E125A74ADF8B303447BBD1498B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_F72503E125A74ADF8B303447BBD1498B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HighestInfectionRate]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>HighestInfectionRate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_F72503E125A74ADF8B303447BBD1498B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InfectionPopulationPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[InfectionPopulationPercentage]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>InfectionPopulationPercentage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_F72503E125A74ADF8B303447BBD1498B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_F72503E125A74ADF8B303447BBD1498B]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_F72503E125A74ADF8B303447BBD1498B'>
            <properties context=''>
              <relation connection='sqlserver.1v4h8bu06qjrnz1fdw38t14c71ts' name='Custom SQL Query' type='text'>SELECT Location,population, MAX(total_cases) AS HighestInfectionRate,&#13;
MAX(total_cases/population) * 100 AS InfectionPopulationPercentage FROM&#13;
Portfolio..CovidDeaths$ &#13;
GROUP BY location,population&#13;
ORDER BY  InfectionPopulationPercentage DESC&#13;
OFFSET 0 ROWS</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='PopulationInfectedRate' inline='true' name='federated.11svsss1jruzgg0ztk9y60gebbjo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MEENA\SQLEXPRESS' name='sqlserver.00z2pom1n1gm2u15mphyx0g943wt'>
            <connection authentication='sspi' class='sqlserver' dbname='Portfolio' odbc-native-protocol='yes' one-time-sql='' server='MEENA\SQLEXPRESS' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.00z2pom1n1gm2u15mphyx0g943wt' name='Custom SQL Query' type='text'>Select Location, Population,date, MAX(total_cases) as HighestInfectionCount,  Max((total_cases/population))*100 as PercentPopulationInfected&#13;
From Portfolio..CovidDeaths$&#13;
Group by Location, Population, date&#13;
order by PercentPopulationInfected desc&#13;
OFFSET 0 ROWS</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.00z2pom1n1gm2u15mphyx0g943wt' name='Custom SQL Query' type='text'>Select Location, Population,date, MAX(total_cases) as HighestInfectionCount,  Max((total_cases/population))*100 as PercentPopulationInfected&#13;
From Portfolio..CovidDeaths$&#13;
Group by Location, Population, date&#13;
order by PercentPopulationInfected desc&#13;
OFFSET 0 ROWS</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4EC1AF704C1346CE88835011B766C3BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4EC1AF704C1346CE88835011B766C3BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4EC1AF704C1346CE88835011B766C3BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4EC1AF704C1346CE88835011B766C3BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4EC1AF704C1346CE88835011B766C3BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_4EC1AF704C1346CE88835011B766C3BE]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#045b51'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#068879'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#09c8b2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#0aeed3'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#98f8f5'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_4EC1AF704C1346CE88835011B766C3BE'>
            <properties context=''>
              <relation connection='sqlserver.00z2pom1n1gm2u15mphyx0g943wt' name='Custom SQL Query' type='text'>Select Location, Population,date, MAX(total_cases) as HighestInfectionCount,  Max((total_cases/population))*100 as PercentPopulationInfected&#13;
From Portfolio..CovidDeaths$&#13;
Group by Location, Population, date&#13;
order by PercentPopulationInfected desc&#13;
OFFSET 0 ROWS</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='TotalCases' inline='true' name='federated.14tjphe0y117s6155vcom0hxhhic' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MEENA\SQLEXPRESS' name='sqlserver.1k5gnyj0ryyj0a18qjuzh1qjdjtw'>
            <connection authentication='sspi' class='sqlserver' dbname='Portfolio' odbc-native-protocol='yes' one-time-sql='' server='MEENA\SQLEXPRESS' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1k5gnyj0ryyj0a18qjuzh1qjdjtw' name='Custom SQL Query' type='text'>SELECT   Sum(new_cases) AS Total_Cases, SUM(CAST(new_deaths AS INT)) AS Total_Deaths, &#13;
SUM(CAST(new_deaths AS INT)) / SUM(new_cases)*100 AS DeathPercentage&#13;
FROM Portfolio..CovidDeaths$ &#13;
WHERE continent IS NOT NULL&#13;
order by 1,2 OFFSET 0 ROWS</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1k5gnyj0ryyj0a18qjuzh1qjdjtw' name='Custom SQL Query' type='text'>SELECT   Sum(new_cases) AS Total_Cases, SUM(CAST(new_deaths AS INT)) AS Total_Deaths, &#13;
SUM(CAST(new_deaths AS INT)) / SUM(new_cases)*100 AS DeathPercentage&#13;
FROM Portfolio..CovidDeaths$ &#13;
WHERE continent IS NOT NULL&#13;
order by 1,2 OFFSET 0 ROWS</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Total_Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Cases]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>Total_Cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_BA129A80002F41C785DDA497BBED88DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Total_Deaths]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>Total_Deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_BA129A80002F41C785DDA497BBED88DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_BA129A80002F41C785DDA497BBED88DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_BA129A80002F41C785DDA497BBED88DB]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_BA129A80002F41C785DDA497BBED88DB'>
            <properties context=''>
              <relation connection='sqlserver.1k5gnyj0ryyj0a18qjuzh1qjdjtw' name='Custom SQL Query' type='text'>SELECT   Sum(new_cases) AS Total_Cases, SUM(CAST(new_deaths AS INT)) AS Total_Deaths, &#13;
SUM(CAST(new_deaths AS INT)) / SUM(new_cases)*100 AS DeathPercentage&#13;
FROM Portfolio..CovidDeaths$ &#13;
WHERE continent IS NOT NULL&#13;
order by 1,2 OFFSET 0 ROWS</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='DeathCount' inline='true' name='federated.09ge2x71qwsqg214lcaj41tjnhba' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MEENA\SQLEXPRESS' name='sqlserver.1sktrf60ssc8z21cnx5d11xtvkxq'>
            <connection authentication='sspi' class='sqlserver' dbname='Portfolio' odbc-native-protocol='yes' one-time-sql='' server='MEENA\SQLEXPRESS' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1sktrf60ssc8z21cnx5d11xtvkxq' name='Custom SQL Query' type='text'>SELECT location, SUM(CAST(new_deaths AS INT)) AS TotalDeathCount&#13;
FROM Portfolio..CovidDeaths$&#13;
WHERE continent IS NULL AND&#13;
location not in  (&apos;World&apos;,&apos;European Union&apos;, &apos;International&apos;)&#13;
GROUP BY location&#13;
ORDER BY TotalDeathCount DESC OFFSET 0 ROWS</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1sktrf60ssc8z21cnx5d11xtvkxq' name='Custom SQL Query' type='text'>SELECT location, SUM(CAST(new_deaths AS INT)) AS TotalDeathCount&#13;
FROM Portfolio..CovidDeaths$&#13;
WHERE continent IS NULL AND&#13;
location not in  (&apos;World&apos;,&apos;European Union&apos;, &apos;International&apos;)&#13;
GROUP BY location&#13;
ORDER BY TotalDeathCount DESC OFFSET 0 ROWS</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_50765CBC34084D408F389C0ED78E0B2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_50765CBC34084D408F389C0ED78E0B2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_50765CBC34084D408F389C0ED78E0B2B]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#750000'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#9a0000'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b50000'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#ee3d2d'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#f93021'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_50765CBC34084D408F389C0ED78E0B2B'>
            <properties context=''>
              <relation connection='sqlserver.1sktrf60ssc8z21cnx5d11xtvkxq' name='Custom SQL Query' type='text'>SELECT location, SUM(CAST(new_deaths AS INT)) AS TotalDeathCount&#13;
FROM Portfolio..CovidDeaths$&#13;
WHERE continent IS NULL AND&#13;
location not in  (&apos;World&apos;,&apos;European Union&apos;, &apos;International&apos;)&#13;
GROUP BY location&#13;
ORDER BY TotalDeathCount DESC OFFSET 0 ROWS</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_C169FAD244F1417FBC31236CC22B1681]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_8739DC2C83E54BE79E700371644F7716]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_D8B882DFB2F048F884E33C3E938676DF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 3' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_734DC130584149ECA194379FE8C3E571]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 4' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='16'>Global Covid Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalCases' name='federated.14tjphe0y117s6155vcom0hxhhic' />
          </datasources>
          <datasource-dependencies datasource='federated.14tjphe0y117s6155vcom0hxhhic'>
            <column datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total_Cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total_Deaths]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_Cases]' derivation='Sum' name='[sum:Total_Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_Deaths]' derivation='Sum' name='[sum:Total_Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14tjphe0y117s6155vcom0hxhhic].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14tjphe0y117s6155vcom0hxhhic].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14tjphe0y117s6155vcom0hxhhic].[sum:Total_Cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14tjphe0y117s6155vcom0hxhhic].[sum:Total_Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.14tjphe0y117s6155vcom0hxhhic].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.14tjphe0y117s6155vcom0hxhhic].[sum:Total_Cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.14tjphe0y117s6155vcom0hxhhic].[sum:Total_Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.14tjphe0y117s6155vcom0hxhhic].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.14tjphe0y117s6155vcom0hxhhic].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.14tjphe0y117s6155vcom0hxhhic].[:Measure Names]' value='248' />
            <format attr='font-weight' field='[federated.14tjphe0y117s6155vcom0hxhhic].[Multiple Values]' value='bold' />
            <format attr='font-family' field='[federated.14tjphe0y117s6155vcom0hxhhic].[Multiple Values]' value='Tableau Medium' />
            <format attr='text-format' field='[federated.14tjphe0y117s6155vcom0hxhhic].[Multiple Values]' value='c#,##0,,M' />
            <format attr='text-format' field='[federated.14tjphe0y117s6155vcom0hxhhic].[sum:DeathPercentage:qk]' value='*0%' />
            <format attr='text-align' value='center' />
            <format attr='color' field='[federated.14tjphe0y117s6155vcom0hxhhic].[Multiple Values]' value='#0f1f02' />
            <format attr='font-size' field='[federated.14tjphe0y117s6155vcom0hxhhic].[Multiple Values]' value='28' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.14tjphe0y117s6155vcom0hxhhic].[:Measure Names]' value='48' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
            <format attr='background-color' scope='cols' value='#00000000' />
            <format attr='background-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' field='[federated.14tjphe0y117s6155vcom0hxhhic].[:Measure Names]' value='#adadad' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-family' scope='cols' value='Tableau Medium' />
            <format attr='text-align' value='center' />
            <format attr='color' field='[federated.14tjphe0y117s6155vcom0hxhhic].[sum:Total_Cases:qk]' value='#ffffff' />
            <format attr='font-family' scope='rows' value='Tableau Medium' />
            <format attr='font-family' field='[federated.14tjphe0y117s6155vcom0hxhhic].[:Measure Names]' value='Tableau Medium' />
            <format attr='font-size' scope='cols' value='16' />
            <format attr='font-weight' field='[federated.14tjphe0y117s6155vcom0hxhhic].[:Measure Names]' value='bold' />
            <format attr='color' scope='cols' value='#000000' />
            <format attr='color' scope='rows' value='#000000' />
            <format attr='color' field='[federated.14tjphe0y117s6155vcom0hxhhic].[:Measure Names]' value='#000000' />
            <format attr='font-size' field='[federated.14tjphe0y117s6155vcom0hxhhic].[:Measure Names]' value='14' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#aaaa7f' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.14tjphe0y117s6155vcom0hxhhic].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern-only' value='solid' />
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.14tjphe0y117s6155vcom0hxhhic].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{452E343E-1C62-4413-921E-1A1608DDA54E}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='16'>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DeathCount' name='federated.09ge2x71qwsqg214lcaj41tjnhba' />
          </datasources>
          <datasource-dependencies datasource='federated.09ge2x71qwsqg214lcaj41tjnhba'>
            <column datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.09ge2x71qwsqg214lcaj41tjnhba].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.09ge2x71qwsqg214lcaj41tjnhba].[sum:TotalDeathCount:qk]' scope='rows' value='false' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.09ge2x71qwsqg214lcaj41tjnhba].[none:location:nk]' value='122' />
            <format attr='text-format' field='[federated.09ge2x71qwsqg214lcaj41tjnhba].[sum:TotalDeathCount:qk]' value='n#,##0;-#,##0' />
            <format attr='font-family' field='[federated.09ge2x71qwsqg214lcaj41tjnhba].[sum:TotalDeathCount:qk]' value='Tableau Medium' />
            <format attr='font-weight' field='[federated.09ge2x71qwsqg214lcaj41tjnhba].[sum:TotalDeathCount:qk]' value='bold' />
            <format attr='font-size' field='[federated.09ge2x71qwsqg214lcaj41tjnhba].[sum:TotalDeathCount:qk]' value='10' />
            <format attr='color' field='[federated.09ge2x71qwsqg214lcaj41tjnhba].[none:location:nk]' value='#ffffff' />
            <format attr='color' field='[federated.09ge2x71qwsqg214lcaj41tjnhba].[sum:TotalDeathCount:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='background-color' field='[federated.09ge2x71qwsqg214lcaj41tjnhba].[sum:TotalDeathCount:qk]' value='#aeb5bd' />
            <format attr='background-color' field='[federated.09ge2x71qwsqg214lcaj41tjnhba].[none:location:nk]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.09ge2x71qwsqg214lcaj41tjnhba].[sum:TotalDeathCount:qk]' value='#000000' />
            <format attr='text-format' field='[federated.09ge2x71qwsqg214lcaj41tjnhba].[sum:TotalDeathCount:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='font-family' field='[federated.09ge2x71qwsqg214lcaj41tjnhba].[none:location:nk]' value='Tableau Medium' />
            <format attr='color' field='[federated.09ge2x71qwsqg214lcaj41tjnhba].[none:location:nk]' value='#ffffff' />
            <format attr='font-weight' field='[federated.09ge2x71qwsqg214lcaj41tjnhba].[none:location:nk]' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#aaaa7f' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.09ge2x71qwsqg214lcaj41tjnhba].[sum:TotalDeathCount:qk]' value='10' />
            <format attr='font-weight' field='[federated.09ge2x71qwsqg214lcaj41tjnhba].[sum:TotalDeathCount:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.09ge2x71qwsqg214lcaj41tjnhba].[none:location:nk]' />
              <text column='[federated.09ge2x71qwsqg214lcaj41tjnhba].[sum:TotalDeathCount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09ge2x71qwsqg214lcaj41tjnhba].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.09ge2x71qwsqg214lcaj41tjnhba].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{AC21FA3E-675F-428B-954E-0A7D03E59884}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='16'>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='InfectionRate' name='federated.1jygqp21qy1mey1birpa4033kv8f' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jygqp21qy1mey1birpa4033kv8f'>
            <column datatype='real' name='[InfectionPopulationPercentage]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[InfectionPopulationPercentage]' derivation='Sum' name='[sum:InfectionPopulationPercentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jygqp21qy1mey1birpa4033kv8f].[Longitude (generated)]' field-type='quantitative' max='25304375.991692133' min='-18750051.035472151' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jygqp21qy1mey1birpa4033kv8f].[Latitude (generated)]' field-type='quantitative' max='18211660.619964983' min='-1825847.7228242592' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jygqp21qy1mey1birpa4033kv8f].[sum:InfectionPopulationPercentage:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#aaaa7f' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jygqp21qy1mey1birpa4033kv8f].[none:Location:nk]' />
              <color column='[federated.1jygqp21qy1mey1birpa4033kv8f].[sum:InfectionPopulationPercentage:qk]' />
              <geometry column='[federated.1jygqp21qy1mey1birpa4033kv8f].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jygqp21qy1mey1birpa4033kv8f].[Latitude (generated)]</rows>
        <cols>[federated.1jygqp21qy1mey1birpa4033kv8f].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9B08C23A-D8E7-4EE2-9CDC-5249E00FC3B4}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='16'>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PopulationInfectedRate' name='federated.11svsss1jruzgg0ztk9y60gebbjo' />
          </datasources>
          <datasource-dependencies datasource='federated.11svsss1jruzgg0ztk9y60gebbjo'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11svsss1jruzgg0ztk9y60gebbjo].[tmn:date:ok]'>
            <groupfilter function='level-members' level='[tmn:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.11svsss1jruzgg0ztk9y60gebbjo].[tmn:date:ok]' direction='ASC'>
            <dictionary>
              <bucket>#2021-10-01 00:00:00#</bucket>
              <bucket>#2021-09-01 00:00:00#</bucket>
              <bucket>#2021-08-01 00:00:00#</bucket>
              <bucket>#2021-07-01 00:00:00#</bucket>
              <bucket>#2021-06-01 00:00:00#</bucket>
              <bucket>#2021-05-01 00:00:00#</bucket>
              <bucket>#2021-04-01 00:00:00#</bucket>
              <bucket>#2021-03-01 00:00:00#</bucket>
              <bucket>#2021-02-01 00:00:00#</bucket>
              <bucket>#2021-01-01 00:00:00#</bucket>
              <bucket>#2020-12-01 00:00:00#</bucket>
              <bucket>#2020-11-01 00:00:00#</bucket>
              <bucket>#2020-10-01 00:00:00#</bucket>
              <bucket>#2020-09-01 00:00:00#</bucket>
              <bucket>#2020-08-01 00:00:00#</bucket>
              <bucket>#2020-07-01 00:00:00#</bucket>
              <bucket>#2020-06-01 00:00:00#</bucket>
              <bucket>#2020-05-01 00:00:00#</bucket>
              <bucket>#2020-04-01 00:00:00#</bucket>
              <bucket>#2020-03-01 00:00:00#</bucket>
              <bucket>#2020-02-01 00:00:00#</bucket>
              <bucket>#2020-01-01 00:00:00#</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Location:nk]</column>
            <column>[federated.11svsss1jruzgg0ztk9y60gebbjo].[tmn:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[fVal:avg:PercentPopulationInfected:qk]' scope='rows' value='false' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[fVal:avg:PercentPopulationInfected:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='font-family' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[fVal:avg:PercentPopulationInfected:qk]' value='Tableau Light' />
            <format attr='font-weight' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[fVal:avg:PercentPopulationInfected:qk]' value='bold' />
            <format attr='color' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[fVal:avg:PercentPopulationInfected:qk]' value='#000000' />
            <format attr='font-family' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Location:nk]' value='Tableau Medium' />
            <format attr='font-weight' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Location:nk]' value='bold' />
            <format attr='color' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Location:nk]' value='#000000' />
            <format attr='color' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Forecast Indicator:nk]' value='#ffffff' />
            <format attr='font-weight' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Forecast Indicator:nk]' value='normal' />
            <format attr='color' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[tmn:date:ok]' value='#ffffff' />
            <format attr='font-weight' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[tmn:date:ok]' value='bold' />
            <format attr='font-family' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[tmn:date:ok]' value='Tableau Light' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='36' />
            <format attr='background-color' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[fVal:avg:PercentPopulationInfected:qk]' value='#aeb5bd' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='background-color' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[tmn:date:ok]' value='#000000' />
            <format attr='background-color' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Forecast Indicator:nk]' value='#391933' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#00d6d6' />
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[fVal:avg:PercentPopulationInfected:qk]' value='Tableau Light' />
            <format attr='font-weight' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[fVal:avg:PercentPopulationInfected:qk]' value='bold' />
            <format attr='color' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[fVal:avg:PercentPopulationInfected:qk]' value='#000000' />
            <format attr='font-family' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Location:nk]' value='Tableau Medium' />
            <format attr='color' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Location:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Location:nk]' value='bold' />
            <format attr='font-weight' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Forecast Indicator:nk]' value='bold' />
            <format attr='font-family' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Forecast Indicator:nk]' value='Tableau Medium' />
            <format attr='font-weight' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[tmn:date:ok]' value='bold' />
            <format attr='text-format' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[tmn:date:ok]' value='*mmm yy' />
            <format attr='color' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[tmn:date:ok]' value='#ffffff' />
            <format attr='text-orientation' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[tmn:date:ok]' value='0' />
            <format attr='color' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Forecast Indicator:nk]' value='#ffffff' />
            <format attr='font-size' field='[federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Forecast Indicator:nk]' value='12' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#aaaa7f' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='font-family' value='Tableau Medium' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Location:nk]' />
            </encodings>
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11svsss1jruzgg0ztk9y60gebbjo].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>([federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Forecast Indicator:nk] / [federated.11svsss1jruzgg0ztk9y60gebbjo].[tmn:date:ok])</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{04DCD042-FE0D-4621-B3B5-0B631DBE7AE1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='850' maxwidth='1650' minheight='850' minwidth='1650' sizing-mode='fixed' />
      <datasources>
        <datasource caption='PopulationInfectedRate' name='federated.11svsss1jruzgg0ztk9y60gebbjo' />
      </datasources>
      <datasource-dependencies datasource='federated.11svsss1jruzgg0ztk9y60gebbjo'>
        <column datatype='datetime' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='3' param='C:/Users/Meena/OneDrive/Power BI/SQL Project/CovidAnalysis/Picture4.png' type-v2='bitmap' w='100000' x='0' y='353'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#557053' />
          </zone-style>
        </zone>
        <zone h='19059' id='4' name='Sheet 1' w='47758' x='61' y='8235' />
        <zone h='33294' id='5' name='Sheet 2' w='46242' x='-303' y='26824' />
        <zone h='39294' id='7' name='Sheet 4' w='99576' x='-242' y='60588' />
        <zone h='51882' id='8' name='Sheet 3' w='54000' x='45818' y='8000' />
        <zone forceUpdate='true' h='8000' id='9' type-v2='text' w='36727' x='-121' y='118'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='25'>Covid Analysis Dashboard</run>
          </formatted-text>
        </zone>
        <zone h='8000' id='10' mode='dropdown' name='Sheet 4' param='[federated.11svsss1jruzgg0ztk9y60gebbjo].[tmn:date:ok]' type-v2='filter' values='database' w='14242' x='74788' y='353' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='12' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98118' id='11' param='vert' type-v2='layout-flow' w='99030' x='485' y='941'>
                <zone forceUpdate='true' h='8000' id='9' type-v2='text' w='36727' x='-121' y='118'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='25'>Covid Analysis Dashboard</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='100000' id='3' is-fixed='true' param='C:/Users/Meena/OneDrive/Power BI/SQL Project/CovidAnalysis/Picture4.png' type-v2='bitmap' w='100000' x='0' y='353'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#557053' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51882' id='8' is-fixed='true' name='Sheet 3' w='54000' x='45818' y='8000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='162' h='19059' id='4' is-fixed='true' name='Sheet 1' w='47758' x='61' y='8235'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33294' id='5' is-fixed='true' name='Sheet 2' w='46242' x='-303' y='26824'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8000' id='10' mode='dropdown' name='Sheet 4' param='[federated.11svsss1jruzgg0ztk9y60gebbjo].[tmn:date:ok]' type-v2='filter' values='database' w='14242' x='74788' y='353'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39294' id='7' is-fixed='true' name='Sheet 4' w='99576' x='-242' y='60588'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B1674B48-35F7-45B6-A6B1-01C09A702354}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14tjphe0y117s6155vcom0hxhhic].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E90F3B3B-651F-4594-8C60-0AE45C1FE69F}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09ge2x71qwsqg214lcaj41tjnhba].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.09ge2x71qwsqg214lcaj41tjnhba].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E838D585-A6AF-49D7-A361-AC4A5EF0BB62}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1jygqp21qy1mey1birpa4033kv8f].[sum:InfectionPopulationPercentage:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jygqp21qy1mey1birpa4033kv8f].[sum:InfectionPopulationPercentage:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15B6DEB5-8F27-48FD-8C42-8262013E7B9C}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11svsss1jruzgg0ztk9y60gebbjo].[none:Location:nk]</field>
            <field>[federated.11svsss1jruzgg0ztk9y60gebbjo].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{057F758A-9266-434D-B36C-ED667D92AEC9}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
      <simple-id uuid='{06B009AA-CDFB-44DE-AC5C-A33F8366BC37}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='129' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAHRUlEQVR4nO3ca0zV9x3H8c8B5KKiXXXagHeteih4I15KvFAuFhmY1thSnDVp4zrXLcuS
      tWvcFpM92APjsgdburqlbbJkddqWtYAXqtWWOu9BQ+sNUWe9USpERGTc5OzBsiZLGsXL4QQ/
      71fCk3P5/b+/cN45vyfnHwiFQiEBpqIiPQAQSQQAawQAawQAawQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAazE9eVFLfb262tvDPcs9iYqJ0aCkpEiPgT4m0JMfxKzPzNTZysre
      mOeuDRk/Xq+dPh3pMdDHcASCNQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKAtR7dG/RB1t3Zqc6WlkiP
      cVsxAwYoOjY20mM8cOwDqPv0U21duDDSY9zWExs2aEJxcaTHeOBwBII1AoA1AoA1AoA1AoA1
      AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1
      AoA1AoA1AoA1AoA1AoA1+5vjPuhOrVmjG7W1kR7jluJHjFBw3bqIXJsAHnAN27er6cCBSI9x
      SwNTUiIWAEcgWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMA
      WCMAWCMAWCMAWCMAWCMAWCMAWCMAWOO+QOizbn60WaFD++5pDQJAnxWqrlJ3yd/vaQ2OQLBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALAWCIVCIUlatWqVzp07960vCnV3
      9+ZMdy0QdXc994X9BQIBKRC48zd2dyt0/8e5rwKSdDf/u1Dov3/3cu3/BZCWlqajR4/e02JA
      XxPWI1D24uVau3atpo9/JJyXCZuk4EytLMrXrCfy9Uji/z8XHRuv8WNHKO3xbI0dFvfN4wsK
      ilSYmX7btYuXFd/vce9Y4bKX9KtXX1bctzw3atyjSugnLV6c/81jUQkPa/Uvf6GHEm79sRmb
      Nkdz0sbe52nDIyaci8+am6nOppOKHRLU0mBQyaMnKTR4pDountTw4DS1Xz6qawmjNTF5iN5/
      Z4OeeX65dr3/psoqj4RzrB4bPmGKXvjB97Sj6qL2dF3W6mdXas+2d5WatVRt15tUmD1bW3cf
      17iHC1RRulGbKg4qPzdL/TtS1Tw4RUsyp6u9vU1fnalW63dSlBzdoJrGgIZFt+pmVD/lLn1B
      8ycmat/xRhXkztSan/9MDW29tbtYFT9ToJK3/6Dg40/qpeUFKnu3XMO+KyWOnKGMrDyd2PK6
      Zjz1I2XPz9Dq136tcbNzFJycogUzJil9yU80JK5bHaGASjZt0nPFz6l8Q4lyiwp1qua0Lhyv
      0m/X/VT7P/6Hps1brCsnPtP6d8p7a3M9FtZvgO6b7fps13bduNlfU6ekasbUxzRhTJK2HTij
      hzrOa8Rjs5U6IUn7jpzXyh++qAHdzZqclhbOke5YSekOFeZnK31erqp3V2hBzkIlDQ7o9fVv
      6dCBf+psfbM2l5YpmDpZCcODmpf+qNLnZ2p6cKL27tyl5ss1Sp6YoUVZ6YofPkYzp6aobOMG
      jZ08WQU5c/TXv72nqelTlZicplFDe3Nn0Xrzz2/o6RU/1orvF+qjzTu1KC9P06alauaMoD4/
      XKWKnZ/oUm2VrnQmalCslJ2TpQH9Byn3yVwNimlTfUu3jp25rKefLVLoxteaMi1diaFGVf3r
      uqbMnqe4q8dV2xSnoQMDypg7tzc312Nh/Qao3FGhuXMXqn5Lub5sHKnq6lJdaQ3pYu1BVZ6c
      pPZdbylnxSsakXBVr7y6Wk8VFevs4cPhHOmOXDp+UFu/aND5qx3av7NM+UuKtP6N9RqaPFrX
      Guq05+hXaqo7r7M1tapr+FoD46WXX3xebYljNGrIQJ2rPaUvLyUoftBpdX08TGkjE3Sstk6X
      mv6t0g8/1NnLzcrLXqADe/ep8cJpXbzWm7vr0rCkUarY+Bdt21ujZUsX6fd//J2yCwrVevg9
      Haqp16zgdH3wQblaO6N1vVP6/JMS/ek3u5WVmaGOrmq1dUWp5UarKsuvKCe/UF/s36uDR7p0
      oa5dW2qaNSkjT8P7XdexE6d08cyJ3txcD/XTfwDbnqxx9cC/iAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAWlElEQVR4nO3deXhV9Z3H8fe5a3KXJPfmLrnZSEJCQkjCKmsgQcHdivtUa1VsHW2d6Uyn
      ffrIM4/tzDOdTme307Faaquonbqg1rprEVoEBKzIWsAETNgC2fft5jd/BJTFNucHCQTO9/U8
      95Ebf997fnf53HN+5/zOuYZSSiGERdnOdQeEOJccx/5x/b59fNzbey77IsRZ92kAdvf2srWn
      51z2RYizTjaBxHlKQUcHnOEIVgJgRW+9BP/2b/Dyu8PzeGvegQPNg/9uPQwvvfn57X7+I6iq
      huWv/+nHevsVaO0eepm97fDErz67v/ZtePIFUAqefwJWfvCnazub4dV3gOM2gYSFrFsJt38P
      clNgw7vw1lqYXgm9e+BgJ5RcBOveBlcq3HEjPLYUkrNhQgzeXQ0F0yBmgxXrobwCfr4UYmth
      yQOgBqCxCV5YBk1xaO2HL18BjzwOu3bA3CvgcAPs3gTPvQ4LvwC73oOqOrjxJvjZUni/Bu64
      BJ5aDunjYGomrN0M866GwvTB57B1PZRMB+Poc9q8DtYdgSvnwep3IdsB3lZ4Zw1MnQ9GHVQ3
      QHMnTM2CR58CX0DWAJb12I/hzVXw5Ivwzb+Fl34F+/eCPQzdVVDbDltXw/JnIbkIvnQ9xHth
      QMHLr8He3aCcEIzAjDL4izvB54C+bqjeCzXVMH8R7PwAXn8O5t0AxWMGH2P3HnjqSbjz6zA5
      H3oHoHEfbKmF0iK4+0vwzBNw4z1QtRZ210JyLuRFP+v/xh0wbfyJz6k0D975LYwtHbz/f8vh
      /m/Ca8/AvhqYWgmHq6B4IpRMgYqpEgDLuvt+uGweRLzw5hvgCw3+vXwupGdCSwOUTYGCcbDj
      A1j3Abz6CuSXQIIDcgohLxWe+zV4vLBxLfTET1yG3T7431AINrwHtXWf/b/sdFjxDmzdBGt3
      QFHe4OZLghPWbIDsbFj5FjT1g98Fc8vBefTxetugPxE8J23ATJwCzy6HyRMG74eT4K03wB0E
      mwF22+Aaw+GC+gNQvQ/j2IGw0upq2QtkFXt2QVouJDoHv7G3bIOiEmg6CIGMwQ/W3o+hrQ+K
      i+DgJ9CpIOyDxi4Y6Ie0IOysGqxzKdi6A0onAT1QcxhccQhnDz5OYQFs3Q6Jboilw4EjMDYL
      tm6BjLHQdADcHnB5B9ciOz+BySWwbTOk5YCjHxID4D4agA9XQGsIKso+e07790ByFPZ+Ankx
      qO+GWMrR51YKLXWDIT9UC3n5UPMxOJMlAOI8tGYVlM0Cn+uMH+qzdcjAwOBNiNFu5tzB/w7D
      5/XTAIx/4N9xVu094wcUo1dKNEa8rYG2Tjnif8ynAXDVN5FwqP5c9kWYYuPvHvohyX37ePBb
      D+FwuUkJ+DASwnzjW4v44ZIfYXM6aWvtxOdx0tWnSEn20VzfwBW330PjqidYtV7e52PkOMB5
      xh2IEbTX0+vPIzXZy1d+8F0ObtvMvv1tZBfkU1RYwC3fvpMffvdp/uq2Ut7YUE/RhEIC8Rqq
      Zd7vKWQ36HmmcPYsIuEIqdEos+ZMJuRoY9n/PsW61ZvYX7WbDRt3ntC+bM4MUhJdRHMyzlGP
      RzcJwHmmuCSPR77/3zz8w8fIGhvhw6oOvvmP3yDk7qTDEeKS+RM4cKSfG26upKWlnXh/P+3N
      zTQ1ttHZ1kpPb3zohVjIp7tB33zhdVqaWs51f4Q4qww5I0xYmWwCCUuTAAhLkwAIS5MACEuT
      AAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAI
      S5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuT
      AAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAI
      S5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuT
      AAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAI
      S5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS3Oc/Id1
      u3fSH4+bKh4TDpOVGh72TglxthhKKXX8H6L3fpnG9nZTxf9w460sWXTjiHRMiLNBNoGEpZ2y
      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
      JADC0v4fGzopd3v5714AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
